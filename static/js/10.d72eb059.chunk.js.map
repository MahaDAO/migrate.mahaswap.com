{"version":3,"sources":["src/components/Heading.tsx","src/components/TokenLogo.tsx","src/components/Border.tsx","src/components/Notice.tsx","src/components/Loading.tsx","src/components/TokenSymbol.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","assets/empty-token.png","assets/ETH.png","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/DeprecatedNotice.tsx","src/hooks/useHomeState.tsx","src/screens/HomeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","TokenLogo","backgroundLight","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","backgroundColor","borderRadius","onError","opacity","Border","border","marginTop","Notice","textLight","borderStyle","useStyles","clear","note","titleStyle","paddingVertical","alignSelf","Loading","marginVertical","large","TokenSymbol","caption","marginLeft","symbol","TokenAmount","formatBalance","amount","balance","decimals","TokenName","numberOfLines","ellipsizeMode","name","module","exports","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","DeprecatedNotice","View","useHomeState","useContext","EthersContext","provider","signer","address","tokens","lpTokens","setLPTokens","pools","setPools","loadingLPTokens","setLoadingLPTokens","loadingPools","setLoadingPools","getPair","useSDK","useEffect","undefined","useAsyncEffect","a","async","weth","find","t","console","log","length","Fraction","String","sushiData","price","wethPriceUSD","parse","fetchMyLPTokens","getAddress","fetched","Promise","all","map","lpToken","fetchLPTokenWithValue","fetchMyPools","Home","state","normal","MyTokens","useTranslation","loadingTokens","goToSwap","useLinker","loading","TokenItem","MyLPTokens","goToRemoveLiquidity","LPTokenItem","Pools","goToFarming","TokenList","renderItem","useCallback","item","key","data","useMemo","filter","amountDeposited","isZero","sort","t1","t2","FlatList","keyExtractor","ItemSeparatorComponent","EmptyList","margin","Text","textAlign","FlexView","path","tokenA","tokenB","ExternalIcon","textDark","isETH","endsWith","ethers","constants","AddressZero","TouchableHighlight","window","open","toLowerCase","sum","reduce","previous","current","HomeScreen","totalValue","Screen","Container","BackgroundImage","Content","huge","Title","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/10.d72eb059.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Notice from \"./Notice\";\n\nconst DeprecatedNotice = () => {\n    const text =\n        \"Please note, as part of SushiSwap's ongoing feature enhancements, this interface will be deprecated on Monday March 1, 2021. Please begin visiting https://www.sushiswap.fi\";\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice text={text} color={\"orange\"} />\n        </View>\n    );\n};\n\nexport default DeprecatedNotice;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport sushiData from \"@sushiswap/sushi-data\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport { isWETH } from \"../utils\";\nimport { fetchLPTokenWithValue, fetchMyLPTokens, fetchMyPools } from \"../utils/fetch-utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface HomeState {\n    loadingLPTokens: boolean;\n    loadingPools: boolean;\n    lpTokens?: LPTokenWithValue[];\n    pools?: LPTokenWithValue[];\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useHomeState = () => {\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lpTokens, setLPTokens] = useState<LPTokenWithValue[]>();\n    const [pools, setPools] = useState<LPTokenWithValue[]>();\n    const [loadingLPTokens, setLoadingLPTokens] = useState(true);\n    const [loadingPools, setLoadingPools] = useState(true);\n    const { getPair } = useSDK();\n\n    useEffect(() => {\n        setLPTokens(undefined);\n        setPools(undefined);\n        setLoadingLPTokens(true);\n        setLoadingPools(true);\n    }, [address]);\n\n    // Load Liquidity\n    useAsyncEffect(async () => {\n        const weth = tokens.find(t => isWETH(t));\n        console.log(provider, signer, weth, tokens)\n        if (provider && signer && weth && tokens && tokens.length > 0) {\n            setLoadingLPTokens(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyLPTokens(await signer.getAddress(), tokens, provider);\n            try {\n                setLPTokens(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingLPTokens(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens]);\n\n    // Load Farming\n    useAsyncEffect(async () => {\n        const weth = tokens.find(t => isWETH(t));\n        if (provider && signer && weth && tokens && tokens.length > 0 && lpTokens) {\n            setLoadingPools(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyPools(await signer.getAddress(), tokens, provider);\n            try {\n                setPools(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingPools(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens, lpTokens]);\n\n    return {\n        loadingLPTokens,\n        loadingPools,\n        tokens,\n        lpTokens,\n        pools\n    };\n};\n\nexport default useHomeState;\n","import React, { FC, useCallback, useContext, useMemo } from \"react\";\nimport { FlatList, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport { ethers } from \"ethers\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport DeprecatedNotice from \"../components/DeprecatedNotice\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport Loading from \"../components/Loading\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenName from \"../components/TokenName\";\nimport TokenPrice from \"../components/TokenPrice\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport TokenValue from \"../components/TokenValue\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useHomeState, { HomeState } from \"../hooks/useHomeState\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Screen from \"./Screen\";\n\ninterface TokenItemProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n}\n\ninterface LPTokenItemProps {\n    token: LPTokenWithValue;\n    disabled?: boolean;\n}\n\nconst HomeScreen = () => {\n    const t = useTranslation();\n    const state = useHomeState();\n    const { loadingTokens } = useContext(EthersContext);\n    const loading = loadingTokens || state.loadingLPTokens || state.loadingPools;\n    const totalValue = sum(state.tokens) + sum(state.lpTokens) + sum(state.pools);\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content style={{ paddingBottom: Spacing.huge }}>\n                    <DeprecatedNotice />\n                    <Title text={t(\"total-value\")} style={{ flex: 1, marginTop: Spacing.normal }} />\n                    <Title\n                        text={loading ? t(\"fetching\") : formatUSD(totalValue, 4)}\n                        fontWeight={\"light\"}\n                        disabled={loading}\n                        style={{ fontSize: IS_DESKTOP ? 32 : 24 }}\n                    />\n                    <Home state={state} />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n        </Screen>\n    );\n};\n\nconst Home = ({ state }: { state: HomeState }) => {\n    return (\n        <View style={{ marginTop: IS_DESKTOP ? Spacing.large : Spacing.normal }}>\n            <MyTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <MyLPTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <Pools state={state} />\n        </View>\n    );\n};\n\nconst MyTokens = ({ state }: { state: HomeState }) => {\n    const t = useTranslation();\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const goToSwap = useLinker(\"/swap\", \"Swap\");\n    return (\n        <View>\n            <Heading text={t(\"tokens\")} buttonText={t(\"manage\")} onPressButton={goToSwap} />\n            <TokenList loading={loadingTokens} tokens={tokens} TokenItem={TokenItem} />\n        </View>\n    );\n};\n\nconst MyLPTokens = ({ state }: { state: HomeState }) => {\n    const t = useTranslation();\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    return (\n        <View>\n            <Heading text={t(\"liquidity\")} buttonText={t(\"manage\")} onPressButton={goToRemoveLiquidity} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingLPTokens} tokens={state.lpTokens} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst Pools = ({ state }: { state: HomeState }) => {\n    const t = useTranslation();\n    const goToFarming = useLinker(\"/farming\", \"Farming\");\n    return (\n        <View>\n            <Heading text={t(\"farms\")} buttonText={t(\"manage\")} onPressButton={goToFarming} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingPools} tokens={state.pools} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    loading: boolean;\n    tokens?: TokenWithValue[] | LPTokenWithValue[];\n    TokenItem: FC<TokenItemProps | LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(({ item }) => {\n        return <props.TokenItem key={item.address} token={item} />;\n    }, []);\n    const data = useMemo(\n        () =>\n            (props.tokens || [])\n                // @ts-ignore\n                .filter(token => !(token.amountDeposited ? token.amountDeposited.isZero() : token.balance.isZero()))\n                .sort((t1, t2) => (t2.valueUSD || 0) - (t1.valueUSD || 0)),\n        [props.tokens]\n    );\n    return props.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList\n            keyExtractor={item => item.address}\n            data={data}\n            renderItem={renderItem}\n            ItemSeparatorComponent={() => <Border small={true} />}\n        />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: TokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token} disabled={props.disabled} />\n            <View>\n                <TokenPrice token={props.token} disabled={props.disabled} style={{ marginLeft: Spacing.small }} />\n                <TokenName token={props.token} disabled={props.disabled} />\n            </View>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} disabled={props.disabled} />\n                    {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/tokens/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst LPTokenItem = (props: LPTokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n            <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n            <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} amount={props.token.amountDeposited} disabled={props.disabled} />\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/pairs/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst ExternalIcon = ({ path }) => {\n    const { textDark, disabled } = useColors();\n    const onPress = () => window.open(\"https://sushiswapanalytics.com/\" + path.toLowerCase(), \"_blank\");\n    const isETH = path.endsWith(ethers.constants.AddressZero);\n    return (\n        <TouchableHighlight onPress={onPress} disabled={isETH}>\n            <Icon\n                type={\"evilicon\"}\n                name={\"external-link\"}\n                color={isETH ? disabled : textDark}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </TouchableHighlight>\n    );\n};\n\nconst sum = tokens => (tokens ? tokens.reduce((previous, current) => previous + (current.valueUSD || 0), 0) : 0);\n\nexport default HomeScreen;\n"],"sourceRoot":""}